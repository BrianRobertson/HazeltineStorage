@model HazeltineStorage.ViewModels.ContractBuilderViewModel
@{
    ViewBag.Title = "Printable Contract";
}

<h2>Contract</h2>



<div>
    <img src="~/Content/Images/HazeltineStorageBuilding.png" />
</div>








<div>
    <h4>
        To Contract for @Html.DisplayFor(model => model.Customer.FirstName) @Html.DisplayFor(model => model.Customer.LastName)
    </h4>
    <hr />

    <div class="row">

        <div class="col-md-4">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Contract.StartDate)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Contract.StartDate)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Contract.EndDate)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Contract.EndDate)
                </dd>
            </dl>
        </div>

        <div class="col-md-8">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Contract.DayOfMonthDue)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Contract.DayOfMonthDue)
                </dd>

                <dt>
                    Grace Period Ends
                    @*@Html.DisplayNameFor(model => model.Contract.DayOfMonthGracePeriodEnds)*@
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Contract.DayOfMonthGracePeriodEnds)
                </dd>
            </dl>
        </div>
    </div>
</div>


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(su => su.StorageUnits.First().UnitNumber)
        </th>
        <th>
            @Html.DisplayNameFor(su => su.StorageUnits.First().UnitDescription)
        </th>
        <th>
            @Html.DisplayNameFor(su => su.StorageUnits.First().TermAtRate)
        </th>
        <th>
            @Html.DisplayNameFor(su => su.StorageUnits.First().RentalRate)
        </th>
    </tr>
    @foreach (var storageUnit in Model.StorageUnits.Where(su => su.ContractId == Model.Contract.Id))
    {
        <tr>
            <td>
                @storageUnit.UnitNumber
            </td>
            <td>
                @storageUnit.UnitDescription
            </td>
            <td>
                @storageUnit.TermAtRate
            </td>
            <td>
                @storageUnit.RentalRate
            </td>
        </tr>
    }
    <tr>
        <th>
            <p>Total Units Contracted</p>
        </th>
        <th></th>
        <th></th>
        <th>
            <p>Total Contracted Rate</p>
        </th>
    </tr>
    <tr>
        <td>
            @Model.StorageUnits.Where(su => su.ContractId == Model.Contract.Id).Count()
        </td>
        <td></td>
        <td></td>
        <td>
            @Model.Contract.ContractTotal
        </td>
    </tr>
</table>


@*@using (Html.BeginForm("AddStorage", "Contracts", FormMethod.Post))//removed from arguments: new { viewModel = Model}
            {
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(su => su.StorageUnits)
        @Html.DropDownListFor(ssui => ssui.SelectedStorageUnitId, new SelectList(Model.StorageUnits, "Id", "UnitNumber"), "Select Storage Unit To Add", new { @class = "form-control" })
    </div>

                @Html.HiddenFor(m => m.Contract.Id)
                @Html.HiddenFor(m => m.Customer.Id)

                <button type="submit" class="btn-primary">Add Storage</button>
}*@

<br />
<div>
    @Html.ActionLink("Return To Manage This Customer", "Manage", "Customers", new { id = Model.Customer.Id }, null)
    @*@Html.ActionLink("Back to List", "Index")*@
</div>
